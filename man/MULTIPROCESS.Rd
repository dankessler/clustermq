% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qsys_multiprocess.r
\name{MULTIPROCESS}
\alias{MULTIPROCESS}
\title{Process on multiple processes on one machine}
\description{
This makes use of rzmq messaging and sends requests via TCP/IP
}
\keyword{internal}
\section{Super class}{
\code{\link[clustermq:QSys]{clustermq::QSys}} -> \code{MULTIPROCESS}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{MULTIPROCESS$new()}}
\item \href{#method-submit_jobs}{\code{MULTIPROCESS$submit_jobs()}}
\item \href{#method-cleanup}{\code{MULTIPROCESS$cleanup()}}
\item \href{#method-finalize}{\code{MULTIPROCESS$finalize()}}
\item \href{#method-clone}{\code{MULTIPROCESS$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="clustermq" data-topic="QSys" data-id="receive_data">}\href{../../clustermq/html/QSys.html#method-receive_data}{\code{clustermq::QSys$receive_data()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="clustermq" data-topic="QSys" data-id="send_call">}\href{../../clustermq/html/QSys.html#method-send_call}{\code{clustermq::QSys$send_call()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="clustermq" data-topic="QSys" data-id="send_common_data">}\href{../../clustermq/html/QSys.html#method-send_common_data}{\code{clustermq::QSys$send_common_data()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="clustermq" data-topic="QSys" data-id="send_job_data">}\href{../../clustermq/html/QSys.html#method-send_job_data}{\code{clustermq::QSys$send_job_data()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="clustermq" data-topic="QSys" data-id="send_shutdown_worker">}\href{../../clustermq/html/QSys.html#method-send_shutdown_worker}{\code{clustermq::QSys$send_shutdown_worker()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="clustermq" data-topic="QSys" data-id="send_wait">}\href{../../clustermq/html/QSys.html#method-send_wait}{\code{clustermq::QSys$send_wait()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="clustermq" data-topic="QSys" data-id="set_common_data">}\href{../../clustermq/html/QSys.html#method-set_common_data}{\code{clustermq::QSys$set_common_data()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MULTIPROCESS$new(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-submit_jobs"></a>}}
\if{latex}{\out{\hypertarget{method-submit_jobs}{}}}
\subsection{Method \code{submit_jobs()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MULTIPROCESS$submit_jobs(n_jobs, ..., verbose = TRUE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cleanup"></a>}}
\if{latex}{\out{\hypertarget{method-cleanup}{}}}
\subsection{Method \code{cleanup()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MULTIPROCESS$cleanup(quiet = FALSE, timeout = 3)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-finalize"></a>}}
\if{latex}{\out{\hypertarget{method-finalize}{}}}
\subsection{Method \code{finalize()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MULTIPROCESS$finalize(quiet = FALSE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MULTIPROCESS$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
